//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LuckyForm.CreditCompanyReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreditCard", Namespace="http://schemas.datacontract.org/2004/07/CreditCompany.Models")]
    [System.SerializableAttribute()]
    public partial class CreditCard : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CVVField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExpiryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CVV {
            get {
                return this.CVVField;
            }
            set {
                if ((object.ReferenceEquals(this.CVVField, value) != true)) {
                    this.CVVField = value;
                    this.RaisePropertyChanged("CVV");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ExpiryDate {
            get {
                return this.ExpiryDateField;
            }
            set {
                if ((this.ExpiryDateField.Equals(value) != true)) {
                    this.ExpiryDateField = value;
                    this.RaisePropertyChanged("ExpiryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Deal", Namespace="http://schemas.datacontract.org/2004/07/CreditCompany.Models")]
    [System.SerializableAttribute()]
    public partial class Deal : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PaymentsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardID {
            get {
                return this.CardIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CardIDField, value) != true)) {
                    this.CardIDField = value;
                    this.RaisePropertyChanged("CardID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Payments {
            get {
                return this.PaymentsField;
            }
            set {
                if ((this.PaymentsField.Equals(value) != true)) {
                    this.PaymentsField = value;
                    this.RaisePropertyChanged("Payments");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CreditCompanyReference.ICredit")]
    public interface ICredit {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICredit/GetDealVerification", ReplyAction="http://tempuri.org/ICredit/GetDealVerificationResponse")]
        bool GetDealVerification(LuckyForm.CreditCompanyReference.CreditCard card, double amount, int payments, string businessID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICredit/GetDealVerification", ReplyAction="http://tempuri.org/ICredit/GetDealVerificationResponse")]
        System.Threading.Tasks.Task<bool> GetDealVerificationAsync(LuckyForm.CreditCompanyReference.CreditCard card, double amount, int payments, string businessID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICredit/GetDealsReport", ReplyAction="http://tempuri.org/ICredit/GetDealsReportResponse")]
        LuckyForm.CreditCompanyReference.Deal[] GetDealsReport(System.DateTime start, System.DateTime end, string businessID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICredit/GetDealsReport", ReplyAction="http://tempuri.org/ICredit/GetDealsReportResponse")]
        System.Threading.Tasks.Task<LuckyForm.CreditCompanyReference.Deal[]> GetDealsReportAsync(System.DateTime start, System.DateTime end, string businessID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICreditChannel : LuckyForm.CreditCompanyReference.ICredit, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreditClient : System.ServiceModel.ClientBase<LuckyForm.CreditCompanyReference.ICredit>, LuckyForm.CreditCompanyReference.ICredit {
        
        public CreditClient() {
        }
        
        public CreditClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CreditClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CreditClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CreditClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool GetDealVerification(LuckyForm.CreditCompanyReference.CreditCard card, double amount, int payments, string businessID) {
            return base.Channel.GetDealVerification(card, amount, payments, businessID);
        }
        
        public System.Threading.Tasks.Task<bool> GetDealVerificationAsync(LuckyForm.CreditCompanyReference.CreditCard card, double amount, int payments, string businessID) {
            return base.Channel.GetDealVerificationAsync(card, amount, payments, businessID);
        }
        
        public LuckyForm.CreditCompanyReference.Deal[] GetDealsReport(System.DateTime start, System.DateTime end, string businessID) {
            return base.Channel.GetDealsReport(start, end, businessID);
        }
        
        public System.Threading.Tasks.Task<LuckyForm.CreditCompanyReference.Deal[]> GetDealsReportAsync(System.DateTime start, System.DateTime end, string businessID) {
            return base.Channel.GetDealsReportAsync(start, end, businessID);
        }
    }
}
